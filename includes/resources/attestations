<h1 id='attestation'>Attestation</h1>
<p>An <strong>Attestation</strong> is a confirmation that some piece of identity information has been verified by a trusted 3rd party.</p>

<p>Origin provides an attestation service that users can optionally use to add attestations to their profile.</p>

<p>The following attestations are currently offered:</p>

<ul>
<li>Email</li>
<li>Phone</li>
<li>Facebook</li>
<li>Twitter</li>
</ul>

<p>Currently, attestation is simply a public <em>confirmation</em> that something has been verified by Origin.
The information itself is not made public.</p>

<p>For example, when a user adds an email attestation to their profile, all that anyone else will be able to see is that their email has been verified by Origin.
The email address itself remains private.</p>

<p>Note that these methods are used to simply generate attestation objects.
Once an attestation object has been created, it needs to be added to a user object for it to take effect.</p>
<h2 id='attestation-phonegeneratecode'>phoneGenerateCode</h2>
<blockquote>
<p>To send an SMS verification code</p>
</blockquote>
<pre class="highlight javascript tab-javascript"><code><span class="nx">await</span> <span class="nx">origin</span><span class="p">.</span><span class="nx">attestations</span><span class="p">.</span><span class="nx">phoneGenerateCode</span><span class="p">({</span>
  <span class="na">phone</span><span class="p">:</span> <span class="s2">"555-555-5555"</span>
<span class="p">})</span>
</code></pre>
<p>This will send a text to the given phone number containing a verification code.</p>
<h2 id='attestation-phoneverify'>phoneVerify</h2>
<blockquote>
<p>To verify a ownership of a phone number</p>
</blockquote>
<pre class="highlight javascript tab-javascript"><code><span class="kd">let</span> <span class="nx">phoneAttestation</span> <span class="o">=</span> <span class="nx">await</span> <span class="nx">origin</span><span class="p">.</span><span class="nx">attestations</span><span class="p">.</span><span class="nx">phoneVerify</span><span class="p">({</span>
  <span class="na">wallet</span><span class="p">:</span> <span class="nx">myWalletAddress</span><span class="p">,</span>
  <span class="na">phone</span><span class="p">:</span> <span class="s2">"555-555-5555"</span><span class="p">,</span>
  <span class="na">code</span><span class="p">:</span> <span class="s2">"123456"</span>
<span class="p">})</span>
<span class="c1">// Returns (attestation object)</span>
<span class="p">{</span>
  <span class="nl">signature</span><span class="p">:</span> <span class="s2">"0xeb6123e537e17e2c67b67bbc0b93e6b25ea9eae276c4c2ab353bd7e853ebad2446cc7e91327f3737559d7a9a90fc88529a6b72b770a612f808ab0ba57a46866e1c"</span><span class="p">,</span>
  <span class="nx">data</span><span class="p">:</span> <span class="s2">"0x7f5e752d19fee44e13bb0cc820255017c35584caddc055641d6ccadfa3afca01"</span><span class="p">,</span>
  <span class="nx">claimType</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span>
  <span class="nx">service</span><span class="p">:</span> <span class="s2">"phone"</span>
<span class="p">}</span>
</code></pre>
<p>This will verify that the <code>code</code> submitted in the request is the one that was sent to the phone number in the <code>phoneGenerateCode</code> call. If it is valid, an attestation object will be returned.</p>
<h2 id='attestation-emailgeneratecode'>emailGenerateCode</h2>
<blockquote>
<p>To send an email verification code</p>
</blockquote>
<pre class="highlight javascript tab-javascript"><code><span class="nx">await</span> <span class="nx">origin</span><span class="p">.</span><span class="nx">attestations</span><span class="p">.</span><span class="nx">emailGenerateCode</span><span class="p">({</span>
  <span class="na">email</span><span class="p">:</span> <span class="s2">"me@my.domain"</span>
<span class="p">})</span>
</code></pre>
<p>This will send an email to the given email address containing a verification code.</p>
<h2 id='attestation-emailverify'>emailVerify</h2>
<blockquote>
<p>To verify ownership of an email address</p>
</blockquote>
<pre class="highlight javascript tab-javascript"><code><span class="kd">let</span> <span class="nx">emailAttestation</span> <span class="o">=</span> <span class="nx">await</span> <span class="nx">origin</span><span class="p">.</span><span class="nx">attestations</span><span class="p">.</span><span class="nx">emailVerify</span><span class="p">({</span>
  <span class="na">wallet</span><span class="p">:</span> <span class="nx">myWalletAddress</span><span class="p">,</span>
  <span class="na">email</span><span class="p">:</span> <span class="s2">"me@my.domain"</span><span class="p">,</span>
  <span class="na">code</span><span class="p">:</span> <span class="s2">"123456"</span>
<span class="p">})</span>
<span class="c1">// Returns (attestation object)</span>
<span class="p">{</span>
  <span class="nl">signature</span><span class="p">:</span> <span class="s2">"0xeb6123e537e17e2c67b67bbc0b93e6b25ea9eae276c4c2ab353bd7e853ebad2446cc7e91327f3737559d7a9a90fc88529a6b72b770a612f808ab0ba57a46866e1c"</span><span class="p">,</span>
  <span class="nx">data</span><span class="p">:</span> <span class="s2">"0x7f5e752d19fee44e13bb0cc820255017c35584caddc055641d6ccadfa3afca01"</span><span class="p">,</span>
  <span class="nx">claimType</span><span class="p">:</span> <span class="mi">11</span><span class="p">,</span>
  <span class="nx">service</span><span class="p">:</span> <span class="s2">"email"</span>
<span class="p">}</span>
</code></pre>
<p>This will verify that the <code>code</code> submitted in the request is the one that was sent to the email address in the <code>emailGenerateCode</code> call. If it is valid, an attestation object will be returned.</p>
<h2 id='attestation-facebookauthurl'>facebookAuthUrl</h2>
<blockquote>
<p>To get Facebook authentication url</p>
</blockquote>
<pre class="highlight javascript tab-javascript"><code><span class="nx">await</span> <span class="nx">origin</span><span class="p">.</span><span class="nx">attestations</span><span class="p">.</span><span class="nx">facebookAuthUrl</span><span class="p">({</span>
  <span class="na">redirectUrl</span><span class="p">:</span> <span class="s2">"http://redirect.url"</span>
<span class="p">})</span>
<span class="c1">// Returns</span>
<span class="s2">"http://foo.bar"</span>
</code></pre>
<p>This will return a url which your dapp can redirect the user to.
The page will ask the user to grant permissions to the Origin app, which will be used to verify their Facebook identity.
The user will be redirected to the specified <code>redirectUrl</code> after authentication. See the <a href="https://developers.facebook.com/docs/facebook-login/manually-build-a-login-flow">Facebook login documentation</a> for more details.</p>
<h2 id='attestation-facebookverify'>facebookVerify</h2>
<blockquote>
<p>To verify ownership of a Facebook account</p>
</blockquote>
<pre class="highlight javascript tab-javascript"><code><span class="kd">let</span> <span class="nx">facebookAttestation</span> <span class="o">=</span> <span class="nx">await</span> <span class="nx">origin</span><span class="p">.</span><span class="nx">attestations</span><span class="p">.</span><span class="nx">facebookVerify</span><span class="p">({</span>
  <span class="na">wallet</span><span class="p">:</span> <span class="nx">myWalletAddress</span><span class="p">,</span>
  <span class="na">redirectUrl</span><span class="p">:</span> <span class="s2">"http://redirect.url"</span>
  <span class="na">code</span><span class="p">:</span> <span class="s2">"12345"</span>
<span class="p">})</span>
<span class="c1">// Returns (attestation object)</span>
<span class="p">{</span>
  <span class="nl">signature</span><span class="p">:</span> <span class="s2">"0xeb6123e537e17e2c67b67bbc0b93e6b25ea9eae276c4c2ab353bd7e853ebad2446cc7e91327f3737559d7a9a90fc88529a6b72b770a612f808ab0ba57a46866e1c"</span><span class="p">,</span>
  <span class="nx">data</span><span class="p">:</span> <span class="s2">"0x7f5e752d19fee44e13bb0cc820255017c35584caddc055641d6ccadfa3afca01"</span><span class="p">,</span>
  <span class="nx">claimType</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
  <span class="nx">service</span><span class="p">:</span> <span class="s2">"facebook"</span>
<span class="p">}</span>
</code></pre>
<p>This will perform Facebook oauth verification on the specified <code>code</code> and <code>redirectUrl</code>. If it is valid, an attestation object will be returned.</p>

<p>Note that <code>code</code> is the oauth code generated in <code>facebookAuthUrl</code> (it will be added as a query param the url when the user is redirected - see the <a href="https://developers.facebook.com/docs/facebook-login/manually-build-a-login-flow">documentation</a> for details). <code>redirectUrl</code> <em>must</em> match the <code>redirectUrl</code> specified in the <code>facebookAuthUrl</code> call.</p>
<h2 id='attestation-twitterauthurl'>twitterAuthUrl</h2>
<blockquote>
<p>To get Twitter authentication url</p>
</blockquote>
<pre class="highlight javascript tab-javascript"><code><span class="nx">await</span> <span class="nx">origin</span><span class="p">.</span><span class="nx">attestations</span><span class="p">.</span><span class="nx">twitterAuthUrl</span><span class="p">()</span>
<span class="c1">// Returns</span>
<span class="s2">"http://foo.bar"</span>
</code></pre>
<p>This will return a url which your dapp can redirect the user to.
The page will ask the user to grant permissions to the Origin app, which will be used to verify their Twitter identity. See the <a href="https://developer.twitter.com/en/docs/basics/authentication/guides/access-tokens">Twitter authentication documentation</a> for more details.</p>
<h2 id='attestation-twitterverify'>twitterVerify</h2>
<blockquote>
<p>To verify ownership of a Twitter account</p>
</blockquote>
<pre class="highlight javascript tab-javascript"><code><span class="kd">let</span> <span class="nx">twitterAttestation</span> <span class="o">=</span> <span class="nx">await</span> <span class="nx">origin</span><span class="p">.</span><span class="nx">attestations</span><span class="p">.</span><span class="nx">twitterVerify</span><span class="p">({</span>
  <span class="na">wallet</span><span class="p">:</span> <span class="nx">myWalletAddress</span><span class="p">,</span>
  <span class="na">oauthVerifier</span><span class="p">:</span> <span class="s2">"12345"</span>
<span class="p">})</span>
<span class="c1">// Returns (attestation object)</span>
<span class="p">{</span>
  <span class="nl">signature</span><span class="p">:</span> <span class="s2">"0xeb6123e537e17e2c67b67bbc0b93e6b25ea9eae276c4c2ab353bd7e853ebad2446cc7e91327f3737559d7a9a90fc88529a6b72b770a612f808ab0ba57a46866e1c"</span><span class="p">,</span>
  <span class="nx">data</span><span class="p">:</span> <span class="s2">"0x7f5e752d19fee44e13bb0cc820255017c35584caddc055641d6ccadfa3afca01"</span><span class="p">,</span>
  <span class="nx">claimType</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span>
  <span class="nx">service</span><span class="p">:</span> <span class="s2">"twitter"</span>
<span class="p">}</span>
</code></pre>
<p>This will perform Twitter oauth verification on the specified <code>oauthVerifier</code>. If it is valid, an attestation object will be returned.</p>

<p>Note that <code>oauthVerifier</code> is the oauth verifier code generated in <code>twitterAuthUrl</code> (it will be added as a query param the url when the user is redirected - see the <a href="https://developer.twitter.com/en/docs/basics/authentication/guides/access-tokens">documentation</a> for details).</p>
